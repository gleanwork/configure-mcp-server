"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const console_state_1 = require("./console-state");
let originalConsole;
let consoleState;
let mockConsoleOptions;
let consoleProxyHandler = {
    get(target, propKey) {
        const method = propKey;
        const originalMethod = target[method];
        return function (...args) {
            consoleState.record(method, args[0]);
            if (mockConsoleOptions !== undefined && !mockConsoleOptions.suppressOutput) {
                originalMethod.apply(originalConsole, args);
            }
        };
    },
};
function mockConsole(options) {
    originalConsole = console;
    consoleState = new console_state_1.default();
    mockConsoleOptions = options;
    console = new Proxy(console, consoleProxyHandler);
    return { resetConsole, consoleState };
}
exports.default = mockConsole;
function resetConsole() {
    console = originalConsole;
}
exports.resetConsole = resetConsole;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9jay1jb25zb2xlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL21vY2stY29uc29sZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBLG1EQUEyQztBQUUzQyxJQUFJLGVBQW9CLENBQUM7QUFDekIsSUFBSSxZQUEwQixDQUFDO0FBQy9CLElBQUksa0JBQWtELENBQUM7QUFFdkQsSUFBSSxtQkFBbUIsR0FBbUM7SUFDeEQsR0FBRyxDQUFDLE1BQU0sRUFBRSxPQUFvQjtRQUM5QixNQUFNLE1BQU0sR0FBVyxPQUFPLENBQUM7UUFDL0IsTUFBTSxjQUFjLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBRXRDLE9BQU8sVUFBUyxHQUFHLElBQVc7WUFDNUIsWUFBWSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFFckMsSUFBSSxrQkFBa0IsS0FBSyxTQUFTLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxjQUFjLEVBQUU7Z0JBQzFFLGNBQWMsQ0FBQyxLQUFLLENBQUMsZUFBZSxFQUFFLElBQUksQ0FBQyxDQUFDO2FBQzdDO1FBQ0gsQ0FBQyxDQUFDO0lBQ0osQ0FBQztDQUNGLENBQUM7QUFFRixTQUF3QixXQUFXLENBQUMsT0FBNEI7SUFDOUQsZUFBZSxHQUFHLE9BQU8sQ0FBQztJQUMxQixZQUFZLEdBQUcsSUFBSSx1QkFBWSxFQUFFLENBQUM7SUFDbEMsa0JBQWtCLEdBQUcsT0FBTyxDQUFDO0lBRTdCLE9BQU8sR0FBRyxJQUFJLEtBQUssQ0FBQyxPQUFPLEVBQUUsbUJBQW1CLENBQUMsQ0FBQztJQUVsRCxPQUFPLEVBQUUsWUFBWSxFQUFFLFlBQVksRUFBRSxDQUFDO0FBQ3hDLENBQUM7QUFSRCw4QkFRQztBQUVELFNBQWdCLFlBQVk7SUFDMUIsT0FBTyxHQUFHLGVBQWUsQ0FBQztBQUM1QixDQUFDO0FBRkQsb0NBRUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmRleGFibGVDb25zb2xlLCBNb2NrQ29uc29sZSwgTW9ja0NvbnNvbGVPcHRpb25zIH0gZnJvbSAnLi90eXBlcyc7XG5pbXBvcnQgQ29uc29sZVN0YXRlIGZyb20gJy4vY29uc29sZS1zdGF0ZSc7XG5cbmxldCBvcmlnaW5hbENvbnNvbGU6IGFueTtcbmxldCBjb25zb2xlU3RhdGU6IENvbnNvbGVTdGF0ZTtcbmxldCBtb2NrQ29uc29sZU9wdGlvbnM6IE1vY2tDb25zb2xlT3B0aW9ucyB8IHVuZGVmaW5lZDtcblxubGV0IGNvbnNvbGVQcm94eUhhbmRsZXI6IFByb3h5SGFuZGxlcjxJbmRleGFibGVDb25zb2xlPiA9IHtcbiAgZ2V0KHRhcmdldCwgcHJvcEtleTogUHJvcGVydHlLZXkpIHtcbiAgICBjb25zdCBtZXRob2QgPSA8c3RyaW5nPnByb3BLZXk7XG4gICAgY29uc3Qgb3JpZ2luYWxNZXRob2QgPSB0YXJnZXRbbWV0aG9kXTtcblxuICAgIHJldHVybiBmdW5jdGlvbiguLi5hcmdzOiBhbnlbXSkge1xuICAgICAgY29uc29sZVN0YXRlLnJlY29yZChtZXRob2QsIGFyZ3NbMF0pO1xuXG4gICAgICBpZiAobW9ja0NvbnNvbGVPcHRpb25zICE9PSB1bmRlZmluZWQgJiYgIW1vY2tDb25zb2xlT3B0aW9ucy5zdXBwcmVzc091dHB1dCkge1xuICAgICAgICBvcmlnaW5hbE1ldGhvZC5hcHBseShvcmlnaW5hbENvbnNvbGUsIGFyZ3MpO1xuICAgICAgfVxuICAgIH07XG4gIH0sXG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBtb2NrQ29uc29sZShvcHRpb25zPzogTW9ja0NvbnNvbGVPcHRpb25zKTogTW9ja0NvbnNvbGUge1xuICBvcmlnaW5hbENvbnNvbGUgPSBjb25zb2xlO1xuICBjb25zb2xlU3RhdGUgPSBuZXcgQ29uc29sZVN0YXRlKCk7XG4gIG1vY2tDb25zb2xlT3B0aW9ucyA9IG9wdGlvbnM7XG5cbiAgY29uc29sZSA9IG5ldyBQcm94eShjb25zb2xlLCBjb25zb2xlUHJveHlIYW5kbGVyKTtcblxuICByZXR1cm4geyByZXNldENvbnNvbGUsIGNvbnNvbGVTdGF0ZSB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcmVzZXRDb25zb2xlKCk6IHZvaWQge1xuICBjb25zb2xlID0gb3JpZ2luYWxDb25zb2xlO1xufVxuIl19