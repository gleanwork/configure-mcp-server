/**
 * A PKCE pair: codeVerifier and codeChallenge.
 */
export type PkcePair = {
    codeVerifier: string;
    codeChallenge: string;
};
/**
 * Generates a random PKCE code verifier (43-128 characters).
 * @returns {string} The code verifier.
 */
export declare function generateCodeVerifier(length?: number): string;
/**
 * Generates a PKCE code challenge from a code verifier.
 * @param {string} codeVerifier - The code verifier.
 * @returns {Promise<string>} The code challenge (base64url-encoded SHA256 hash).
 */
export declare function generateCodeChallenge(codeVerifier: string): Promise<string>;
/**
 * Helper to generate both code verifier and code challenge.
 * @returns {Promise<PkcePair>}
 */
export declare function generatePkcePair(): Promise<PkcePair>;
/**
 * Base64-url encodes a buffer (RFC 4648 ยง5).
 * @param {Buffer} buffer
 * @returns {string}
 */
export declare function base64UrlEncode(buffer: Buffer): string;
//# sourceMappingURL=pkce.d.ts.map